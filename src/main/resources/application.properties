spring.application.name=APIGateWayTest

server.port=6000

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Routing Info =>   /products/* ->  ProductService
#                   /users/*    ->  UserService
#                   /orders/*   ->  OrderService
#                   /payments/* ->  PaymentService

# id could be anything.
spring.cloud.gateway.routes[0].id=productservice123
# add conditions. only one for now.
spring.cloud.gateway.routes[0].predicates[0]=Path=/products/*
# would you want to hardcode the urls by yourself?
#spring.cloud.gateway.routes[0].uri=http://localhost:9010

# OR use a load balanced way to hit the servers?
# we have load balancer dependency in pom.
# load balanced, on the name registered with the ServiceDiscovery.
spring.cloud.gateway.routes[0].uri=lb://rajatsproductservice
# APIGW will go to Service Discovery.
# Get the list of running servers of RajatsProductService.


spring.cloud.gateway.routes[1].id=userserviceid900
spring.cloud.gateway.routes[1].predicates[0]=Path=/users/*
spring.cloud.gateway.routes[1].uri=lb://raviproductservice